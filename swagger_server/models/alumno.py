# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Alumno(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, nombre_completo: str=None, dni: str=None, fecha_nacimiento: str=None, grado: int=None, usuario: str=None, contrasea: str=None, email: str=None):
        """
        Alumno - a model defined in Swagger

        :param nombre_completo: The nombre_completo of this Alumno.
        :type nombre_completo: str
        :param dni: The dni of this Alumno.
        :type dni: str
        :param fecha_nacimiento: The fecha_nacimiento of this Alumno.
        :type fecha_nacimiento: str
        :param grado: The grado of this Alumno.
        :type grado: int
        :param usuario: The usuario of this Alumno.
        :type usuario: str
        :param contrasea: The contrasea of this Alumno.
        :type contrasea: str
        :param email: The email of this Alumno.
        :type email: str
        """
        self.swagger_types = {
            'nombre_completo': str,
            'dni': str,
            'fecha_nacimiento': str,
            'grado': int,
            'usuario': str,
            'contrasea': str,
            'email': str
        }

        self.attribute_map = {
            'nombre_completo': 'NombreCompleto',
            'dni': 'DNI',
            'fecha_nacimiento': 'FechaNacimiento',
            'grado': 'Grado',
            'usuario': 'Usuario',
            'contrasea': 'Contraseña',
            'email': 'email'
        }

        self._nombre_completo = nombre_completo
        self._dni = dni
        self._fecha_nacimiento = fecha_nacimiento
        self._grado = grado
        self._usuario = usuario
        self._contrasea = contrasea
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'Alumno':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alumno of this Alumno.
        :rtype: Alumno
        """
        return deserialize_model(dikt, cls)

    @property
    def nombre_completo(self) -> str:
        """
        Gets the nombre_completo of this Alumno.

        :return: The nombre_completo of this Alumno.
        :rtype: str
        """
        return self._nombre_completo

    @nombre_completo.setter
    def nombre_completo(self, nombre_completo: str):
        """
        Sets the nombre_completo of this Alumno.

        :param nombre_completo: The nombre_completo of this Alumno.
        :type nombre_completo: str
        """

        self._nombre_completo = nombre_completo

    @property
    def dni(self) -> str:
        """
        Gets the dni of this Alumno.

        :return: The dni of this Alumno.
        :rtype: str
        """
        return self._dni

    @dni.setter
    def dni(self, dni: str):
        """
        Sets the dni of this Alumno.

        :param dni: The dni of this Alumno.
        :type dni: str
        """

        self._dni = dni

    @property
    def fecha_nacimiento(self) -> str:
        """
        Gets the fecha_nacimiento of this Alumno.

        :return: The fecha_nacimiento of this Alumno.
        :rtype: str
        """
        return self._fecha_nacimiento

    @fecha_nacimiento.setter
    def fecha_nacimiento(self, fecha_nacimiento: str):
        """
        Sets the fecha_nacimiento of this Alumno.

        :param fecha_nacimiento: The fecha_nacimiento of this Alumno.
        :type fecha_nacimiento: str
        """

        self._fecha_nacimiento = fecha_nacimiento

    @property
    def grado(self) -> int:
        """
        Gets the grado of this Alumno.
        Código del grado que está cursando

        :return: The grado of this Alumno.
        :rtype: int
        """
        return self._grado

    @grado.setter
    def grado(self, grado: int):
        """
        Sets the grado of this Alumno.
        Código del grado que está cursando

        :param grado: The grado of this Alumno.
        :type grado: int
        """

        self._grado = grado

    @property
    def usuario(self) -> str:
        """
        Gets the usuario of this Alumno.
        username del loggin

        :return: The usuario of this Alumno.
        :rtype: str
        """
        return self._usuario

    @usuario.setter
    def usuario(self, usuario: str):
        """
        Sets the usuario of this Alumno.
        username del loggin

        :param usuario: The usuario of this Alumno.
        :type usuario: str
        """

        self._usuario = usuario

    @property
    def contrasea(self) -> str:
        """
        Gets the contrasea of this Alumno.
        contraseña del loggin

        :return: The contrasea of this Alumno.
        :rtype: str
        """
        return self._contrasea

    @contrasea.setter
    def contrasea(self, contrasea: str):
        """
        Sets the contrasea of this Alumno.
        contraseña del loggin

        :param contrasea: The contrasea of this Alumno.
        :type contrasea: str
        """

        self._contrasea = contrasea

    @property
    def email(self) -> str:
        """
        Gets the email of this Alumno.
        email del alumno

        :return: The email of this Alumno.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """
        Sets the email of this Alumno.
        email del alumno

        :param email: The email of this Alumno.
        :type email: str
        """

        self._email = email

