# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Grado(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, grado_id: int=None, nombre_grado: str=None, creditos_grado: int=None, creditos_optativos: int=None, creditos_transversales: int=None, facultad_id: int=None):
        """
        Grado - a model defined in Swagger

        :param grado_id: The grado_id of this Grado.
        :type grado_id: int
        :param nombre_grado: The nombre_grado of this Grado.
        :type nombre_grado: str
        :param creditos_grado: The creditos_grado of this Grado.
        :type creditos_grado: int
        :param creditos_optativos: The creditos_optativos of this Grado.
        :type creditos_optativos: int
        :param creditos_transversales: The creditos_transversales of this Grado.
        :type creditos_transversales: int
        :param facultad_id: The facultad_id of this Grado.
        :type facultad_id: int
        """
        self.swagger_types = {
            'grado_id': int,
            'nombre_grado': str,
            'creditos_grado': int,
            'creditos_optativos': int,
            'creditos_transversales': int,
            'facultad_id': int
        }

        self.attribute_map = {
            'grado_id': 'gradoId',
            'nombre_grado': 'NombreGrado',
            'creditos_grado': 'CreditosGrado',
            'creditos_optativos': 'CreditosOptativos',
            'creditos_transversales': 'CreditosTransversales',
            'facultad_id': 'facultadId'
        }

        self._grado_id = grado_id
        self._nombre_grado = nombre_grado
        self._creditos_grado = creditos_grado
        self._creditos_optativos = creditos_optativos
        self._creditos_transversales = creditos_transversales
        self._facultad_id = facultad_id

    @classmethod
    def from_dict(cls, dikt) -> 'Grado':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Grado of this Grado.
        :rtype: Grado
        """
        return deserialize_model(dikt, cls)

    @property
    def grado_id(self) -> int:
        """
        Gets the grado_id of this Grado.
        Código del grado que se quiere añadir.

        :return: The grado_id of this Grado.
        :rtype: int
        """
        return self._grado_id

    @grado_id.setter
    def grado_id(self, grado_id: int):
        """
        Sets the grado_id of this Grado.
        Código del grado que se quiere añadir.

        :param grado_id: The grado_id of this Grado.
        :type grado_id: int
        """

        self._grado_id = grado_id

    @property
    def nombre_grado(self) -> str:
        """
        Gets the nombre_grado of this Grado.

        :return: The nombre_grado of this Grado.
        :rtype: str
        """
        return self._nombre_grado

    @nombre_grado.setter
    def nombre_grado(self, nombre_grado: str):
        """
        Sets the nombre_grado of this Grado.

        :param nombre_grado: The nombre_grado of this Grado.
        :type nombre_grado: str
        """

        self._nombre_grado = nombre_grado

    @property
    def creditos_grado(self) -> int:
        """
        Gets the creditos_grado of this Grado.

        :return: The creditos_grado of this Grado.
        :rtype: int
        """
        return self._creditos_grado

    @creditos_grado.setter
    def creditos_grado(self, creditos_grado: int):
        """
        Sets the creditos_grado of this Grado.

        :param creditos_grado: The creditos_grado of this Grado.
        :type creditos_grado: int
        """

        self._creditos_grado = creditos_grado

    @property
    def creditos_optativos(self) -> int:
        """
        Gets the creditos_optativos of this Grado.

        :return: The creditos_optativos of this Grado.
        :rtype: int
        """
        return self._creditos_optativos

    @creditos_optativos.setter
    def creditos_optativos(self, creditos_optativos: int):
        """
        Sets the creditos_optativos of this Grado.

        :param creditos_optativos: The creditos_optativos of this Grado.
        :type creditos_optativos: int
        """

        self._creditos_optativos = creditos_optativos

    @property
    def creditos_transversales(self) -> int:
        """
        Gets the creditos_transversales of this Grado.

        :return: The creditos_transversales of this Grado.
        :rtype: int
        """
        return self._creditos_transversales

    @creditos_transversales.setter
    def creditos_transversales(self, creditos_transversales: int):
        """
        Sets the creditos_transversales of this Grado.

        :param creditos_transversales: The creditos_transversales of this Grado.
        :type creditos_transversales: int
        """

        self._creditos_transversales = creditos_transversales

    @property
    def facultad_id(self) -> int:
        """
        Gets the facultad_id of this Grado.
        Código de la facultad a la que se quiere añadir el grado.

        :return: The facultad_id of this Grado.
        :rtype: int
        """
        return self._facultad_id

    @facultad_id.setter
    def facultad_id(self, facultad_id: int):
        """
        Sets the facultad_id of this Grado.
        Código de la facultad a la que se quiere añadir el grado.

        :param facultad_id: The facultad_id of this Grado.
        :type facultad_id: int
        """

        self._facultad_id = facultad_id

