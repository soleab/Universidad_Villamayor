# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class User(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, username: str=None, email: str=None, password: str=None, dni: str=None):
        """
        User - a model defined in Swagger

        :param username: The username of this User.
        :type username: str
        :param email: The email of this User.
        :type email: str
        :param password: The password of this User.
        :type password: str
        :param dni: The dni of this User.
        :type dni: str
        """
        self.swagger_types = {
            'username': str,
            'email': str,
            'password': str,
            'dni': str
        }

        self.attribute_map = {
            'username': 'username',
            'email': 'email',
            'password': 'password',
            'dni': 'dni'
        }

        self._username = username
        self._email = email
        self._password = password
        self._dni = dni

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.
        :rtype: User
        """
        return deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """
        Gets the username of this User.

        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """
        Sets the username of this User.

        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def email(self) -> str:
        """
        Gets the email of this User.

        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """
        Sets the email of this User.

        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def password(self) -> str:
        """
        Gets the password of this User.

        :return: The password of this User.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """
        Sets the password of this User.

        :param password: The password of this User.
        :type password: str
        """

        self._password = password

    @property
    def dni(self) -> str:
        """
        Gets the dni of this User.
        dni del alumno al que corresponde el usuario

        :return: The dni of this User.
        :rtype: str
        """
        return self._dni

    @dni.setter
    def dni(self, dni: str):
        """
        Sets the dni of this User.
        dni del alumno al que corresponde el usuario

        :param dni: The dni of this User.
        :type dni: str
        """

        self._dni = dni

